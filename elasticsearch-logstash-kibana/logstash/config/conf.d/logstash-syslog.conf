input {
    beats {
        port => 5044
        codec => plain { charset => "UTF-8"}
#        codec => multiline {
#            pattern => "^>"
#            negate => true
#            what => "next"
#        }
    }
}
filter {
    grok {
#        match => { "message" => ">%{TIMESTAMP_ISO8601:time}\s*\|\s*%{LOGLEVEL:level}\s*\|\s*%{DATA:thread}\s*\|\s*%{DATA:class}\s*\|\s*%{DATA:url}?\s*\|\s*%{DATA:data}\s*\|\s*%{DATA:responese}?\s*\|\s*%{BASE10NUM:request_duration}\s*\|"}
        match => { "message" => ">%{TIMESTAMP_ISO8601:time}\s.*\|\s*%{LOGLEVEL:level}\s*\|\s*%{DATA:thread}\s*\|\s*%{DATA:class}\s*\|\s*%{DATA:url}?\s*\|\s*%{DATA:data}\s*\|\s*%{DATA:responese}?\s*\|\s*%{DATA:request_duration}\s*\|"}
    }
    date {
        match => [ "time", "ISO8601" ]
        timezone => "Asia/Shanghai"
    }
    mutate {
         remove_field => [ "beat" ] 
#         convert => { "request_duration" => "integer" } 
    }
}
output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "%{[fields][appname]}-%{+YYYY.MM.dd}"
#        workers => 5
#        template_overwrite => false
    }
    
    if [ message ] =~ /(ERR|error|ERROR|Failed)/ {
        zabbix {
            zabbix_host => "%{[host][name]}"      
            zabbix_key => "errorlog"        
            zabbix_server_host => "192.168.37.149"  
            zabbix_server_port => "10051"     
            zabbix_value => "message"
        }
    }
}